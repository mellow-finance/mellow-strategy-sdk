"""
    End-to-end test of primitive strategies.
    H_strategy - TODO
    M_strategy - TODO
"""

import sys

sys.path.append('..')

import numpy as np
import pandas as pd
from pandas import Timestamp
import polars as pl

import unittest

from datetime import datetime

from strategy.data import PoolDataUniV3
from strategy.primitives import Pool, Token, Fee
from strategy.strategies import MStrategy
from strategy.backtest import Backtest

from strategy.strategies import HStrategy


class TestStrategies(unittest.TestCase):
    """
        test BiCurrencyPosition
    """

    def setUp(self):
        self.data_dict = {
            'timestamp': {
                0: Timestamp('2022-01-01 00:00:00'),
                1: Timestamp('2022-01-02 00:00:00'),
                2: Timestamp('2022-01-03 00:00:00'),
                3: Timestamp('2022-01-04 00:00:00'),
                4: Timestamp('2022-01-05 00:00:00'),
                5: Timestamp('2022-01-06 00:00:00'),
                6: Timestamp('2022-01-07 00:00:00'),
                7: Timestamp('2022-01-08 00:00:00'),
                8: Timestamp('2022-01-09 00:00:00'),
                9: Timestamp('2022-01-10 00:00:00'),
                10: Timestamp('2022-01-11 00:00:00'),
                11: Timestamp('2022-01-12 00:00:00'),
                12: Timestamp('2022-01-13 00:00:00'),
                13: Timestamp('2022-01-14 00:00:00'),
                14: Timestamp('2022-01-15 00:00:00')},
            'price': {
                0: 10.0,
                1: 15.716350828063042,
                2: 25.53100949777849,
                3: 34.2786346724524,
                4: 61.538792452889496,
                5: 86.03383059833544,
                6: 145.7683807919327,
                7: 289.25480846384175,
                8: 495.09454104064537,
                9: 844.3937734725213,
                10: 1491.096607829533,
                11: 2668.981794974499,
                12: 3888.036901369077,
                13: 5601.599762101116,
                14: 11181.559197735189},
            'price_before': {
                0: 10.0,
                1: 10.0,
                2: 15.716350828063042,
                3: 25.53100949777849,
                4: 34.2786346724524,
                5: 61.538792452889496,
                6: 86.03383059833544,
                7: 145.7683807919327,
                8: 289.25480846384175,
                9: 495.09454104064537,
                10: 844.3937734725213,
                11: 1491.096607829533,
                12: 2668.981794974499,
                13: 3888.036901369077,
                14: 5601.599762101116},
            'price_next': {
                0: 15.716350828063042,
                1: 25.53100949777849,
                2: 34.2786346724524,
                3: 61.538792452889496,
                4: 86.03383059833544,
                5: 145.7683807919327,
                6: 289.25480846384175,
                7: 495.09454104064537,
                8: 844.3937734725213,
                9: 1491.096607829533,
                10: 2668.981794974499,
                11: 3888.036901369077,
                12: 5601.599762101116,
                13: 11181.559197735189,
                14: 11181.559197735189}
        }
        self.pool = Pool(Token.WBTC, Token.WETH, Fee.MIDDLE)

        swaps_df = pl.from_pandas(pd.DataFrame(self.data_dict))

        self.data = PoolDataUniV3(self.pool, mints=None, burns=None, swaps=swaps_df)

    def test_m_strategy(self):
        ans = {
            'timestamp': {
                0: Timestamp('2022-01-01 00:00:00'), 1: Timestamp('2022-01-02 00:00:00'),
                2: Timestamp('2022-01-03 00:00:00'), 3: Timestamp('2022-01-04 00:00:00'),
                4: Timestamp('2022-01-05 00:00:00'), 5: Timestamp('2022-01-06 00:00:00'),
                6: Timestamp('2022-01-07 00:00:00'), 7: Timestamp('2022-01-08 00:00:00'),
                8: Timestamp('2022-01-09 00:00:00'), 9: Timestamp('2022-01-10 00:00:00'),
                10: Timestamp('2022-01-11 00:00:00'), 11: Timestamp('2022-01-12 00:00:00'),
                12: Timestamp('2022-01-13 00:00:00'), 13: Timestamp('2022-01-14 00:00:00'),
                14: Timestamp('2022-01-15 00:00:00')},
            'price': {
                0: 10.0, 1: 15.716350828063042, 2: 25.53100949777849, 3: 34.2786346724524, 4: 61.538792452889496,
                5: 86.03383059833544, 6: 145.7683807919327, 7: 289.25480846384175, 8: 495.09454104064537,
                9: 844.3937734725213, 10: 1491.096607829533, 11: 2668.981794974499, 12: 3888.036901369077,
                13: 5601.599762101116, 14: 11181.559197735189},
            'total_value_x': {
                0: 0.1, 1: 0.1621615013248303, 2: 0.15994614081124592, 3: 0.15792128482442847,
                4: 0.15297266474926838, 5: 0.14876815817718245, 6: 0.14091882812449294,
                7: 0.12773314164812327,
                8: 0.11342274446217065, 9: 0.09613684210039948, 10: 0.07492313133583581,
                11: 0.05113545140783653,
                12: 0.03492340630813451, 13: 0.020470305111856504, 14: 0.0},
            'total_value_y': {
                0: 1.0, 1: 0.020108362266661794, 2: 0.07650321924379984, 3: 0.14570983277467534,
                4: 0.4493381750371009, 5: 0.809996362471037, 6: 1.9507703727896066, 7: 5.753394109262286,
                8: 12.817207441225472, 9: 27.36963574273585, 10: 58.90660311567897,
                11: 122.20527940934304,
                12: 185.04953034021315, 13: 265.7675171878332, 14: 493.971269777322},
            'total_il_x': {
                0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0, 10: 0.0,
                11: 0.0,
                12: 0.0, 13: 0.0, 14: 0.0},
            'total_il_y': {
                0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0, 10: 0.0,
                11: 0.0,
                12: 0.0, 13: 0.0, 14: 0.0},
            'total_fees_x': {
                0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0, 10: 0.0,
                11: 0.0,
                12: 0.0, 13: 0.0, 14: 0.0},
            'total_fees_y': {
                0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0, 10: 0.0,
                11: 0.0,
                12: 0.0, 13: 0.0, 14: 0.0},
            'total_value_to_x': {
                0: 0.2, 1: 0.16344095623689273, 2: 0.16294262315756508, 3: 0.1621720326785072,
                4: 0.16027437082972304, 5: 0.15818301692330353, 6: 0.15430149974498725,
                7: 0.14762354257116095,
                8: 0.13931114835021358, 9: 0.128550197814973, 10: 0.11442868906185363,
                11: 0.09692267994549339,
                12: 0.08251799839522414, 13: 0.06791523664479879, 14: 0.04417731561778748},
            'total_value_to_y': {
                0: 2.0, 1: 2.568695407893104, 2: 4.160089659428735, 3: 5.559035862275559,
                4: 9.863091242007773,
                5: 13.609090881513122, 6: 22.49227977159361, 7: 42.70081953117495,
                8: 68.97218905429426,
                9: 108.54698661362411, 10: 170.62423009851034, 11: 258.68486829466184,
                12: 320.83302278774573,
                13: 380.4339734325459, 14: 493.971269777322},
            'total_fees_to_x': {
                0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0, 10: 0.0,
                11: 0.0,
                12: 0.0, 13: 0.0, 14: 0.0},
            'total_fees_to_y': {
                0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0, 10: 0.0,
                11: 0.0,
                12: 0.0, 13: 0.0, 14: 0.0},
            'total_il_to_x': {
                0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0, 10: 0.0,
                11: 0.0,
                12: 0.0, 13: 0.0, 14: 0.0},
            'total_il_to_y': {
                0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0, 5: 0.0, 6: 0.0, 7: 0.0, 8: 0.0, 9: 0.0, 10: 0.0,
                11: 0.0,
                12: 0.0, 13: 0.0, 14: 0.0},
            'hold_to_x': {
                0: 0.2, 1: 0.16362800187778992, 2: 0.13916805561828693, 3: 0.12917269049819063,
                4: 0.11624991261837875,
                5: 0.11162333460041646, 6: 0.10686019831301675, 7: 0.10345715946888055, 8: 0.1020198162514539,
                9: 0.10118428158924901, 10: 0.100670647357622, 11: 0.10037467471748325, 12: 0.100257199204989,
                13: 0.1001785204303181, 14: 0.1000894329656818},
            'hold_to_y': {
                0: 2.0, 1: 2.5716350828063046, 2: 3.5531009497778494, 3: 4.42786346724524,
                4: 7.15387924528895,
                5: 9.603383059833545, 6: 15.576838079193273, 7: 29.925480846384175, 8: 50.50945410406454,
                9: 85.43937734725213, 10: 150.1096607829533, 11: 267.8981794974499, 12: 389.80369013690773,
                13: 561.1599762101116, 14: 1119.155919773519},
            'vp0_value_to_x': {
                0: 0.2, 1: 0.16417233755149646, 2: 0.1675964627356259, 3: 0.172492268101896,
                4: 0.19790648225297847,
                5: 0.22976779442428613, 6: 0.3359958654034536, 7: 0.7030725525743518,
                8: 1.3951434885847178,
                9: 2.8331004163739846, 10: 5.965583442903733, 11: 12.27166339234214,
                12: 18.53987644032945,
                13: 26.597222023895178, 14: 49.3971269777322},
            'vp0_value_to_y': {
                0: 2.0, 1: 1.6417233755149647, 2: 1.675964627356259, 3: 1.72492268101896,
                4: 1.9790648225297847,
                5: 2.2976779442428614, 6: 3.359958654034536, 7: 7.030725525743518, 8: 13.951434885847178,
                9: 28.331004163739845, 10: 59.65583442903733, 11: 122.7166339234214,
                12: 185.3987644032945,
                13: 265.97222023895176, 14: 493.971269777322},
            'vpn_value_to_x': {
                0: 0.1000894329656818, 1: 0.1621632996753028, 2: 0.1599529827210271,
                3: 0.1579343160869025,
                4: 0.153012850394856, 5: 0.1488405985540697, 6: 0.14109329130429568,
                7: 0.12824768474605075,
                8: 0.11456902533539821, 9: 0.09858458979450278, 10: 0.08019132355071139,
                11: 0.06206463196738636,
                12: 0.051472934604482906, 13: 0.04423868235585161, 14: 0.04417731561778748},
            'vpn_value_to_y': {
                0: 1119.155919773519, 1: 1813.2385350194697, 2: 1788.5237451494781,
                3: 1765.9519046795212,
                4: 1710.9222447042805, 5: 1664.2699637586688, 6: 1577.6429891222776,
                7: 1434.0090789604467,
                8: 1281.0603390145777, 9: 1102.3294267716733, 10: 896.6640314270154,
                11: 693.9793564289783,
                12: 575.5476653611777, 13: 494.657445591758, 14: 493.971269777322},
            'portfolio_apy_x': {
                0: 0.0, 1: -99.99999999999999, 2: -99.99999999851325, 3: -99.99999950873111,
                4: -99.99999045253209,
                5: -99.99993648157309, 6: -99.999866465459, 7: -99.9999037874449, 8: -99.99995724486084,
                9: -99.99999014718095, 10: -99.99999910138726, 11: -99.99999997303644,
                12: -99.99999999839694,
                13: -99.999999999941, 14: -99.99999999999999},
            'portfolio_apy_y': {
                0: 0.0, 1: 6.832458342136333e+21, 2: 4.998556099678221e+40, 3: 3.2524831720078306e+42,
                4: 3.870463892666488e+52, 5: 4.591413258404422e+52, 6: 6.343433291751517e+56,
                7: 4.50981306940155e+62, 8: 2.2909058732623415e+64, 9: 2.0533066626130201e+65,
                10: 1.1869878010754353e+66, 11: 1.7065656163978714e+66, 12: 8.252935133238092e+63,
                13: 2.6502403326281313e+61, 14: 1.6660111505534506e+60},
            'hold_apy_x': {
                0: 0.0, 1: -99.99999999999999, 2: -100.0, 3: -100.0, 4: -100.0, 5: -99.99999999999996,
                6: -99.99999999999936, 7: -99.9999999999913, 8: -99.99999999986076, 9: -99.99999999841863,
                10: -99.99999998718852, 11: -99.99999992182423, 12: -99.99999962040046,
                13: -99.99999851436117,
                14: -99.99999516514254},
            'hold_apy_y': {
                0: 0.0, 1: 8.418421810612178e+21, 2: 2.31882894349036e+32, 3: 3.134985672845633e+33,
                4: 2.5488688668258768e+42, 5: 2.8280295853033884e+43, 6: 3.0388832132166235e+48,
                7: 4.072708651849456e+55, 8: 7.460817734763345e+58, 9: 3.295527083123861e+61,
                10: 1.6922842632265777e+64, 11: 4.947865710245312e+66, 12: 1.9542778116022802e+66,
                13: 6.673216218985561e+65, 14: 7.321632860619095e+68},
            'vp0_apy_x': {
                0: 0.0, 1: -99.99999999999997, 2: -99.99999995426587, 3: -99.99986315091891,
                4: -53.61348655652848,
                5: 463096.80056684, 6: 55974603940745.914, 7: 8.126209334629408e+26,
                8: 1.6301055370661097e+36,
                9: 1.0470489542794734e+44, 10: 8.524519703587378e+50, 11: 2.4051957212587844e+56,
                12: 1.6961533598658142e+57, 13: 2.3478146381413768e+57, 14: 1.6660111505534506e+60},
            'vp0_apy_y': {
                0: 0.0, 1: -99.99999999999997, 2: -99.99999995426587, 3: -99.99986315091891,
                4: -53.61348655652848,
                5: 463096.80056684546, 6: 55974603940745.914, 7: 8.126209334629454e+26,
                8: 1.6301055370661097e+36,
                9: 1.0470489542794734e+44, 10: 8.524519703587378e+50, 11: 2.405195721258793e+56,
                12: 1.6961533598658142e+57, 13: 2.3478146381413768e+57, 14: 1.6660111505534506e+60},
            'vpn_apy_x': {
                0: 0.0, 1: 1.7599193148625729e+40, 2: 5.9133541105624276e+26, 3: 1.1900223420999038e+20,
                4: 2862835489447113.0, 5: 3045101138040.1123, 6: 5962736716.126411, 7: 8166607.970969008,
                8: 23875.02247825037, 9: -42.47463582119097, 10: -99.93604270818797, 11: -99.99995133665227,
                12: -99.99999922174216, 13: -99.99999994305767, 14: -99.9999997724536},
            'vpn_apy_y': {
                0: 0.0, 1: 1.7599193148625729e+40, 2: 5.913354110562527e+26, 3: 1.1900223420999038e+20,
                4: 2862835489447143.5, 5: 3045101138040.1396, 6: 5962736716.126411, 7: 8166607.9709690735,
                8: 23875.02247825037, 9: -42.474635821190496, 10: -99.93604270818797, 11: -99.99995133665227,
                12: -99.99999922174216, 13: -99.99999994305767, 14: -99.9999997724536}}

        m_strat = MStrategy(
            600, self.data.swaps['price'].min(), self.data.swaps['price'].max(), self.pool, 0.01, 1e-6, 1e-6
        )

        portfolio_history, _, _ = Backtest(m_strat).backtest(self.data.swaps)
        res = portfolio_history.calculate_stats().to_pandas()

        pd.testing.assert_frame_equal(pd.DataFrame(ans), res)

    # def test_h_strategy(self):
    #     ans = {}
    #
    #     h_strat = HStrategy(
    #         900, 10, 1200, self.data.swaps['price'].min() - 2, self.data.swaps['price'].max() + 2,
    #         60, 15, self.pool, 0.01, 1e-5, 1e-5
    #     )
    #
    #     portfolio_history, _, _ = Backtest(h_strat).backtest(self.data.swaps)
    #     res = portfolio_history.calculate_stats().to_pandas()
    #
    #     sys.stdout.write(str(res.to_dict()))
    #     pd.testing.assert_frame_equal(pd.DataFrame(ans), res)


if __name__ == "__main__":
    unittest.main()
